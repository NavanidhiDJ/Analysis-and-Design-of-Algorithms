#include <stdio.h>

struct Item {
    int weight, value;
};

void sortItems(struct Item arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            double r1 = (double)arr[i].value / arr[i].weight;
            double r2 = (double)arr[j].value / arr[j].weight;
            if (r1 < r2) {
                struct Item temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

double fractionalKnapsack(int W, struct Item arr[], int n) {
    sortItems(arr, n);
    double totalValue = 0.0;
    for (int i = 0; i < n; i++) {
        if (arr[i].weight <= W) {
            W -= arr[i].weight;
            totalValue += arr[i].value;
        } else {
            totalValue += arr[i].value * ((double)W / arr[i].weight);
            break;
        }
    }
    return totalValue;
}

int main() {
    struct Item items[] = {{10, 60}, {20, 100}, {30, 120}};
    int W = 50;
    int n = sizeof(items) / sizeof(items[0]);
    double maxValue = fractionalKnapsack(W, items, n);
    printf("Maximum value in Knapsack = %.2f\n", maxValue);
    return 0;
}
